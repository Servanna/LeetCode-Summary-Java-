/*
 Problem:    Pascal's Triangle II
 Difficulty: Easy
 Source:     http://leetcode.com/onlinejudge#question_119
 Notes:
 Given an index k, return the kth row of the Pascal's triangle.
 For example, given k = 3,
 Return [1,3,3,1].
 Note:
 Could you optimize your algorithm to use only O(k) extra space?
 Solution: from back to forth...
 */
public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> res = new ArrayList<Integer>();
        for(int j = 0; j <= rowIndex; j++){
            res.add(1);
            for(int i = j-1; i >=1 ; i--){
                res.set(i, res.get(i)+res.get(i-1));
            }
        }
        return res;
    }
}
