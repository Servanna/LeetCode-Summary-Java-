/*
 Problem:    Convert Sorted Array to Binary Search Tree
 Difficulty: Medium
 Source:     https://oj.leetcode.com/problems/convert-sorted-list-to-binary-search-tree/
 Notes:
 Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.
 Solution: recursive
 */

 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 public class Solution {
    public TreeNode sortedArrayToBST(int[] num) {
        return dfs(num, 0, num.length-1);
    }
    public TreeNode dfs(int[] num, int l, int r){
        if(l > r){return null;}
        int mid = l+(r-l)/2;
        TreeNode root = new TreeNode(num[mid]);
        root.left = dfs(num, l, mid-1);
        root.right = dfs(num, mid+1, r);
        return root;
    }
}
