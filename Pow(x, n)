/*
 Problem:    Pow(x, n)
 Difficulty: easy
 Source:     https://oj.leetcode.com/problems/powx-n/
 Notes:
 Implement pow(x, n).
 
 Solution: recursion.
 */
public class Solution {
    public double pow(double x, int n) {
        if(n < 0){
            return 1/helper(x, -n);
        }
        return helper(x, n);
    }
    public double helper(double x, int n){
        if(n == 0){
            return 1;
        }
        if(n == 1){
            return x;
        }
        return n%2 == 0?helper(x*x, n/2): x*helper(x*x, n/2);
    }
}
