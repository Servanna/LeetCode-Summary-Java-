/*
 Author:     Andy, nkuwjg@gmail.com
 Date:       Oct 22, 2014
 Problem:    Find Minimum in Rotated Sorted ArrayII
 Difficulty: Hard
 Source:     https://oj.leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/
 Notes:
 Suppose a sorted array is rotated at some pivot unknown to you beforehand.
 (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
 Find the minimum element.
 The array may contain duplicates.
*/


public class Solution {
    public int findMin(int[] num) {
        if(num.length == 0){return 0;}
        int l = 0;
        int r =num.length - 1;
            while(l < num.length-2 && num[l] == num[l+1]){
                l++;
            }
            while(r > 0 && num[r] == num[r-1]){
                r--;
            }
        while(l < r){
            int mid = l + (r-l)/2;
            if(num[mid] > num[r]){
                while(mid < num.length-2 && num[mid] == num[mid+1]){
                    mid++;
                }
                l = mid+1;
            }else if(num[mid] < num[r]){
                while(mid > 0 && num[mid] == num[mid-1]){
                    mid--;
                }
                r = mid;
            }
        }
        return num[l];
    }
}

public class Solution {
    public int findMin(int[] num) {
        if (num.length == 0) return 0;
        int left = 0, right = num.length -1;
        while (left < right && num[left] >= num[right]) {
            int mid = left + (right - left) / 2;
            if (num[mid] > num[right]) left = mid + 1;
            else if (num[mid] < num[right]) right = mid;
            else left++;
        }
        return num[left];
    }
}
